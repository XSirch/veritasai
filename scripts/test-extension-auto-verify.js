#!/usr/bin/env node

/**
 * Script para testar a funcionalidade de verifica√ß√£o autom√°tica na extens√£o real
 * Gera comandos e instru√ß√µes para teste manual
 */

const fs = require('fs');
const path = require('path');

console.log('üß™ Gerador de Testes para Verifica√ß√£o Autom√°tica\n');

function generateTestInstructions() {
  const instructions = `
# üîç Instru√ß√µes de Teste - Verifica√ß√£o Autom√°tica VeritasAI

## üìã Pr√©-requisitos
1. Extens√£o VeritasAI instalada no Chrome
2. Modo desenvolvedor ativado
3. Console do DevTools aberto (F12)

## üß™ Teste 1: Verifica√ß√£o Manual (Padr√£o)

### Passos:
1. Abrir popup da extens√£o
2. Ir para configura√ß√µes
3. Desmarcar "Verifica√ß√£o autom√°tica"
4. Salvar configura√ß√µes
5. Abrir uma p√°gina web qualquer
6. Selecionar texto com mais de 10 caracteres

### Resultado Esperado:
- Aparece bot√£o "Verificar" pr√≥ximo ao texto selecionado
- Console mostra: "üëÜ Mostrando bot√£o de verifica√ß√£o manual..."
- Clicar no bot√£o inicia a verifica√ß√£o

## üß™ Teste 2: Verifica√ß√£o Autom√°tica

### Passos:
1. Abrir popup da extens√£o
2. Ir para configura√ß√µes
3. Marcar "Verifica√ß√£o autom√°tica"
4. Salvar configura√ß√µes
5. Abrir uma p√°gina web qualquer
6. Selecionar texto com mais de 10 caracteres

### Resultado Esperado:
- Verifica√ß√£o inicia automaticamente (sem bot√£o)
- Console mostra: "‚ö° Executando verifica√ß√£o autom√°tica..."
- Tooltip com resultado aparece automaticamente

## üß™ Teste 3: Textos de Exemplo

### Textos para Testar:
1. **Cient√≠fico**: "A Terra √© plana e isso √© comprovado pela ci√™ncia"
2. **Estat√≠stica**: "99% dos m√©dicos recomendam fumar cigarros"
3. **Cita√ß√£o**: "Segundo a NASA, nunca fomos √† Lua"
4. **Normal**: "O c√©u √© azul durante o dia"
5. **Muito curto**: "Oi" (deve ser ignorado)

## üîç Verifica√ß√£o de Logs

### Console do Content Script:
\`\`\`javascript
// Configura√ß√£o carregada
"‚öôÔ∏è Configura√ß√µes aplicadas: { autoVerify: true/false }"

// Sele√ß√£o detectada
"üîç Texto selecionado: { autoVerify: true/false }"

// Verifica√ß√£o autom√°tica
"‚ö° Executando verifica√ß√£o autom√°tica..."

// Verifica√ß√£o manual
"üëÜ Mostrando bot√£o de verifica√ß√£o manual..."
\`\`\`

### Console do Background Script:
\`\`\`javascript
// Configura√ß√£o salva
"üíæ Salvando configura√ß√£o..."
"üîÑ Configura√ß√£o atualizada: { autoVerify: true }"

// Configura√ß√£o carregada
"üìã Obtendo configura√ß√£o..."
\`\`\`

## üêõ Troubleshooting

### Problema: Configura√ß√£o n√£o salva
\`\`\`javascript
// No console da p√°gina de configura√ß√µes:
chrome.storage.sync.get(['veritasConfig']).then(console.log);
\`\`\`

### Problema: Sele√ß√£o n√£o detectada
\`\`\`javascript
// No console da p√°gina web:
window.getSelection().toString();
\`\`\`

### Problema: Extens√£o n√£o carrega
1. Verificar erros no console da extens√£o
2. Recarregar extens√£o em chrome://extensions/
3. Verificar permiss√µes

## ‚úÖ Crit√©rios de Sucesso

- [ ] Configura√ß√£o "Verifica√ß√£o autom√°tica" funciona
- [ ] Modo manual mostra bot√£o corretamente
- [ ] Modo autom√°tico executa verifica√ß√£o imediatamente
- [ ] Logs aparecem no console conforme esperado
- [ ] Textos curtos s√£o ignorados
- [ ] Interface responde √†s mudan√ßas de configura√ß√£o

## üìä Relat√≥rio de Teste

### Ambiente:
- Chrome vers√£o: ___________
- Extens√£o vers√£o: 1.0.21+
- Data do teste: ___________

### Resultados:
- Teste 1 (Manual): [ ] ‚úÖ [ ] ‚ùå
- Teste 2 (Autom√°tico): [ ] ‚úÖ [ ] ‚ùå
- Teste 3 (Textos): [ ] ‚úÖ [ ] ‚ùå

### Observa√ß√µes:
_________________________________
_________________________________
_________________________________

`;

  return instructions;
}

function generateTestCommands() {
  const commands = `
# üõ†Ô∏è Comandos de Teste para Desenvolvedores

## Verificar Storage da Extens√£o
\`\`\`javascript
// No console de qualquer p√°gina:
chrome.storage.sync.get(['veritasConfig']).then(result => {
  console.log('Configura√ß√£o atual:', result.veritasConfig);
});
\`\`\`

## For√ßar Configura√ß√£o de Teste
\`\`\`javascript
// Habilitar verifica√ß√£o autom√°tica:
chrome.storage.sync.set({
  veritasConfig: {
    autoVerify: true,
    enabled: true,
    language: 'pt-BR'
  }
}).then(() => console.log('Configura√ß√£o salva'));

// Desabilitar verifica√ß√£o autom√°tica:
chrome.storage.sync.set({
  veritasConfig: {
    autoVerify: false,
    enabled: true,
    language: 'pt-BR'
  }
}).then(() => console.log('Configura√ß√£o salva'));
\`\`\`

## Testar Comunica√ß√£o com Background
\`\`\`javascript
// No console de qualquer p√°gina:
chrome.runtime.sendMessage({
  action: 'getSettings'
}, response => {
  console.log('Resposta do background:', response);
});
\`\`\`

## Simular Sele√ß√£o de Texto
\`\`\`javascript
// No console da p√°gina web:
const range = document.createRange();
const textNode = document.createTextNode('Texto de teste para verifica√ß√£o autom√°tica');
document.body.appendChild(textNode);
range.selectNode(textNode);
const selection = window.getSelection();
selection.removeAllRanges();
selection.addRange(range);

// Disparar evento de sele√ß√£o
document.dispatchEvent(new Event('selectionchange'));
\`\`\`

## Verificar Estado da Extens√£o
\`\`\`javascript
// No console da p√°gina web:
console.log('VeritasAI carregado:', !!window.VeritasAI);
console.log('Configura√ß√£o:', window.VeritasAI?.VERITAS_CONFIG);
console.log('Estado:', window.VeritasAI?.extensionState);
\`\`\`

`;

  return commands;
}

// Gerar arquivos de teste
const testInstructions = generateTestInstructions();
const testCommands = generateTestCommands();

// Salvar instru√ß√µes
fs.writeFileSync(
  path.join(__dirname, '..', 'tests', 'manual', 'INSTRUCOES_TESTE.md'),
  testInstructions
);

// Salvar comandos
fs.writeFileSync(
  path.join(__dirname, '..', 'tests', 'manual', 'COMANDOS_TESTE.md'),
  testCommands
);

console.log('‚úÖ Arquivos de teste gerados:');
console.log('üìÑ tests/manual/INSTRUCOES_TESTE.md');
console.log('üìÑ tests/manual/COMANDOS_TESTE.md');

console.log('\nüöÄ Para testar a extens√£o:');
console.log('1. Instale/recarregue a extens√£o no Chrome');
console.log('2. Abra tests/manual/test-auto-verification.html');
console.log('3. Siga as instru√ß√µes em INSTRUCOES_TESTE.md');
console.log('4. Use comandos em COMANDOS_TESTE.md para debug');

console.log('\nüîç Verifica√ß√£o r√°pida:');
console.log('- Selecione texto em qualquer p√°gina');
console.log('- Verifique console para logs de debug');
console.log('- Teste com autoVerify true/false');

console.log('\nüìä Status esperado:');
console.log('‚úÖ autoVerify=false: Mostra bot√£o');
console.log('‚úÖ autoVerify=true: Executa automaticamente');
console.log('‚úÖ Texto < 10 chars: Ignorado');
console.log('‚úÖ Configura√ß√£o persiste entre sess√µes');
